<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<version>25.0.0</version>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
	</parent>

	<groupId>org.janelia.saalfeldlab</groupId>
	<artifactId>painteragglomerate</artifactId>
	<version>0.1.0-SNAPSHOT</version>

	<name>PainterAgglomerate</name>
	<description>Train agglomeration models with Paintera</description>
	<url>https://github.com/saalfeldlab/paintera</url>
	<inceptionYear>2018</inceptionYear>
	<organization>
		<name>HHMI Janeli</name>
		<url>https://janelia.org</url>
	</organization>
	<licenses>
		<license>
			<name>GNU General Public License v2.0</name>
		</license>
	</licenses>
	<properties>
		<scijava.jvm.version>1.8</scijava.jvm.version>
		<main-class>org.janelia.saalfeldlab.paintera.PainterAgglomerate</main-class>
		<license.licenseName>GNU General Public License v2.0</license.licenseName>
		<license.copyrightOwners>Philipp Hanslovsky, Stephan Saalfeld</license.copyrightOwners>
		<kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
		<kotlin.compiler.incremental>true</kotlin.compiler.incremental>
		<dokka.version>0.9.17</dokka.version>
		<dokka.skip>true</dokka.skip>
		<kotlin.version>1.2.51</kotlin.version>
	</properties>

	<mailingLists>
		<mailingList>
			<name>ImageJ Forum</name>
			<archive>http://forum.imagej.net/</archive>
		</mailingList>
	</mailingLists>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/saalfeldlab/painteragglomerate/issues</url>
	</issueManagement>

    <ciManagement>
		<system>None</system>
	</ciManagement>

	<dependencies>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>paintera</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>n5-label-multisets</artifactId>
			<version>0.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>label-utilities</artifactId>
			<version>0.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>label-utilities-n5</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2-algorithm</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>n5</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.janelia.saalfeldlab</groupId>
			<artifactId>n5-imglib2</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
		</dependency>
        <dependency>
            <groupId>org.zeromq</groupId>
            <artifactId>jzmq</artifactId>
            <version>3.1.0</version>
        </dependency>

		<!--test-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<developers>
		<developer>
			<id>hanslovsky</id>
			<name>Philipp Hanslovsky</name>
			<email>hanslovskyp@janelia.hhmi.org</email>
			<url />
			<organization>HHMI Janelia</organization>
			<organizationUrl>http://janelia.org/</organizationUrl>
			<roles>
				<role>founder</role>
				<role>lead</role>
                <role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>-5</timezone>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>None</name>
		</contributor>
	</contributors>

	<repositories>
		<repository>
			<id>saalfeld-lab-maven-repo</id>
			<url>https://saalfeldlab.github.io/maven</url>
		</repository>
		<repository>
			<id>imagej.public</id>
			<url>https://maven.imagej.net/content/groups/public</url>
		</repository>
	</repositories>

	<scm>
		<connection>scm:git:git://github.com/saalfeldlab/bigcat</connection>
		<developerConnection>scm:git:git@github.com:saalfeldlab/bigcat.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/saalfeldlab/bigcat</url>
	</scm>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter</name>
			<url>https://jcenter.bintray.com/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<sourceDirectory>src/main/kotlin</sourceDirectory>
		<testSourceDirectory>src/test/kotlin</testSourceDirectory>

		<plugins>
		<plugin>
			<artifactId>kotlin-maven-plugin</artifactId>
			<configuration>
				<experimentalCoroutines>enable</experimentalCoroutines>
			</configuration>
			<groupId>org.jetbrains.kotlin</groupId>
			<version>${kotlin.version}</version>
			<executions>
				<execution>
					<id>compile</id>
					<goals> <goal>compile</goal> </goals>
					<configuration>
						<sourceDirs>
							<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
						</sourceDirs>
					</configuration>
				</execution>
				<execution>
					<id>test-compile</id>
					<goals> <goal>test-compile</goal> </goals>
					<configuration>
						<sourceDirs>
							<sourceDir>${project.basedir}/src/test/tests</sourceDir>
						</sourceDirs>
					</configuration>
				</execution>
			</executions>
		</plugin>

		<plugin>
			<groupId>org.jetbrains.dokka</groupId>
			<artifactId>dokka-maven-plugin</artifactId>
			<version>${dokka.version}</version>
			<executions>
				<execution>
					<phase>prepare-package</phase>
					<goals>
						<goal>dokka</goal>
						<goal>javadocJar</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<outputFormat>javadoc</outputFormat>
				<outputDir>target/javadoc</outputDir>
				<jdkVersion>8</jdkVersion>
				<sourceLinks>
					<link>
						<dir>${project.basedir}/src/main/kotlin</dir>
						<url>http://github.com/scenerygraphics/scenery</url>
						<urlSuffix>#L</urlSuffix>
					</link>
				</sourceLinks>
				<skip>${dokka.skip}</skip>
			</configuration>
		</plugin>
		</plugins>
	</build>

</project>
